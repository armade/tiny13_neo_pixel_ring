   1               		.file	"main.c"
   2               	__SP_L__ = 0x3d
   3               	__SREG__ = 0x3f
   4               	__tmp_reg__ = 0
   5               	__zero_reg__ = 1
   6               		.text
   7               	.Ltext0:
   8               		.cfi_sections	.debug_frame
   9               	.global	__vector_6
  11               	__vector_6:
  12               	.LFB5:
  13               		.file 1 "main.c"
   1:main.c        **** /**
   2:main.c        ****  * Rainbow on single LED WS2812.
   3:main.c        **** 	                           _____
   4:main.c        ****                (RESET) PB5 1 -|  u  |- 8 VCC
   5:main.c        ****     (PCINT3/CLKI/ADC3) PB3 2 -|     |- 7 PB2 (SCK/ADC1/T0/PCINT2)
   6:main.c        ****          (PCINT4/ADC2) PB4 3 -|     |- 6 PB1 (MISO/AIN1/OC0B/INT0/PCINT1)
   7:main.c        ****                        GND 4 -|_____|- 5 PB0 (MOSI/AIN0/OC0A/PCINT0)  -> WS2812 data
   8:main.c        **** 								
   9:main.c        **** */
  10:main.c        **** 
  11:main.c        **** #include <avr/io.h>
  12:main.c        **** //#include <util/delay.h>
  13:main.c        **** #include "light_ws2812.h"
  14:main.c        **** #include <avr/sleep.h>
  15:main.c        **** 
  16:main.c        **** #define NR_OF_LEDS 12
  17:main.c        **** 
  18:main.c        **** uint8_t delay = 5;
  19:main.c        **** register uint8_t s       asm("r5"); // lcg var
  20:main.c        **** register uint8_t a       asm("r6"); // lcg var
  21:main.c        **** 
  22:main.c        **** struct pixel {
  23:main.c        **** 	uint8_t g;
  24:main.c        **** 	uint8_t r;
  25:main.c        **** 	uint8_t b;
  26:main.c        **** }pixels[NR_OF_LEDS];
  27:main.c        **** 
  28:main.c        **** 
  29:main.c        **** inline static uint8_t gamma_corr(uint8_t input)
  30:main.c        **** {
  31:main.c        **** 	uint32_t accu;
  32:main.c        **** 
  33:main.c        **** 	accu = (uint32_t)input*input*input + (1UL<<15); // 27 bit max
  34:main.c        **** 	accu>>=16;
  35:main.c        **** 	
  36:main.c        **** 	return accu;
  37:main.c        **** }
  38:main.c        **** 
  39:main.c        **** 
  40:main.c        **** 
  41:main.c        **** static inline int Neo_Pixel_Ring_set(struct pixel *LED, uint8_t nr, uint16_t brightness) {
  42:main.c        **** 	if (nr < NR_OF_LEDS) {
  43:main.c        **** 
  44:main.c        **** 		LED->r = ((uint16_t)gamma_corr(LED->r)*brightness)>>8;
  45:main.c        **** 		LED->g = ((uint16_t)gamma_corr(LED->g)*brightness)>>8;
  46:main.c        **** 		LED->b = ((uint16_t)gamma_corr(LED->b)*brightness)>>8;
  47:main.c        **** 	}
  48:main.c        **** 	return 0;
  49:main.c        **** }
  50:main.c        **** 
  51:main.c        **** static inline char color_wheel(uint8_t pos, struct pixel *color)
  52:main.c        **** {
  53:main.c        ****     if (pos < 85) {
  54:main.c        ****     	color->r = pos * 3;
  55:main.c        ****     	color->g = 255 - pos * 3;
  56:main.c        ****     	color->b = 0;
  57:main.c        ****     } else if (pos < 170) {
  58:main.c        ****         pos -= 85;
  59:main.c        ****         color->r = 255 - pos * 3;
  60:main.c        ****         color->g = 0;
  61:main.c        ****         color->b = pos * 3;
  62:main.c        ****     } else {
  63:main.c        ****         pos -= 170;
  64:main.c        ****         color->r  = 0;
  65:main.c        ****         color->g = pos * 3;
  66:main.c        ****         color->b = 255 - pos * 3;
  67:main.c        ****     }
  68:main.c        **** 	
  69:main.c        **** 	delay = 35;
  70:main.c        **** 	return 0;
  71:main.c        **** }
  72:main.c        **** 
  73:main.c        **** static uint8_t rand(void) {
  74:main.c        **** 	s ^= s << 3;
  75:main.c        **** 	s ^= s >> 5;
  76:main.c        **** 	s ^= a++ >> 2;
  77:main.c        **** 	return s;
  78:main.c        **** }
  79:main.c        **** 
  80:main.c        **** 
  81:main.c        **** static void RGB_fire_run(struct pixel *color1,struct pixel *color2)
  82:main.c        **** {
  83:main.c        **** 	uint8_t brightness = (rand());
  84:main.c        **** 	
  85:main.c        **** 	if(brightness<64)
  86:main.c        **** 		brightness = 64;
  87:main.c        **** 
  88:main.c        **** 	delay = rand()&127;
  89:main.c        **** 
  90:main.c        **** 	if(delay < 5)
  91:main.c        **** 		delay = 5;
  92:main.c        **** 	
  93:main.c        **** 	*color1=*color2;
  94:main.c        **** 	Neo_Pixel_Ring_set(color1,0,brightness);
  95:main.c        **** 	
  96:main.c        **** 	return;
  97:main.c        **** }
  98:main.c        **** 
  99:main.c        **** ISR(TIM0_COMPA_vect)
 100:main.c        **** {
  14               		.loc 1 100 0
  15               		.cfi_startproc
  16 0000 1F92      		push r1
  17               	.LCFI0:
  18               		.cfi_def_cfa_offset 3
  19               		.cfi_offset 1, -2
  20 0002 0F92      		push r0
  21               	.LCFI1:
  22               		.cfi_def_cfa_offset 4
  23               		.cfi_offset 0, -3
  24 0004 0FB6      		in r0,__SREG__
  25 0006 0F92      		push r0
  26 0008 1124      		clr __zero_reg__
  27               	/* prologue: Signal */
  28               	/* frame size = 0 */
  29               	/* stack size = 3 */
  30               	.L__stack_usage = 3
 101:main.c        **** 	// Clear irq flag
 102:main.c        **** 	TCNT0 = 0;
  31               		.loc 1 102 0
  32 000a 12BE      		out 0x32,__zero_reg__
  33               	/* epilogue start */
 103:main.c        **** }
  34               		.loc 1 103 0
  35 000c 0F90      		pop r0
  36 000e 0FBE      		out __SREG__,r0
  37 0010 0F90      		pop r0
  38 0012 1F90      		pop r1
  39 0014 1895      		reti
  40               		.cfi_endproc
  41               	.LFE5:
  43               	.global	__mulsi3
  44               		.section	.text.startup,"ax",@progbits
  45               	.global	main
  47               	main:
  48               	.LFB7:
 104:main.c        **** 
 105:main.c        **** static inline void Init_wakeup_timer(void)
 106:main.c        **** {
 107:main.c        **** 	// 9.6MHz/(256*37) = 1013HZ ~ 1ms
 108:main.c        **** 	//TCCR0B = (1 << CS02);   // timer prescaler == 256
 109:main.c        **** 	TCCR0A = (1 << WGM01);  // timer set to CTC mode
 110:main.c        **** 	TIMSK0 = (1 << OCIE0A); // enable CTC timer interrupt
 111:main.c        **** 	OCR0A = 37; 
 112:main.c        **** 	
 113:main.c        **** 	set_sleep_mode(SLEEP_MODE_IDLE);    // only disable cpu and flash clk while sleeping
 114:main.c        **** }
 115:main.c        **** 
 116:main.c        **** int main(void)
 117:main.c        **** {
  49               		.loc 1 117 0
  50               		.cfi_startproc
  51               	/* prologue: function */
  52               	/* frame size = 0 */
  53               	/* stack size = 0 */
  54               	.L__stack_usage = 0
  55               	.LBB28:
  56               	.LBB29:
 109:main.c        **** 	TIMSK0 = (1 << OCIE0A); // enable CTC timer interrupt
  57               		.loc 1 109 0
  58 0000 82E0      		ldi r24,lo8(2)
  59 0002 8FBD      		out 0x2f,r24
 110:main.c        **** 	OCR0A = 37; 
  60               		.loc 1 110 0
  61 0004 84E0      		ldi r24,lo8(4)
  62 0006 89BF      		out 0x39,r24
 111:main.c        **** 	
  63               		.loc 1 111 0
  64 0008 85E2      		ldi r24,lo8(37)
  65 000a 86BF      		out 0x36,r24
 113:main.c        **** }
  66               		.loc 1 113 0
  67 000c 85B7      		in r24,0x35
  68 000e 877E      		andi r24,lo8(-25)
  69 0010 85BF      		out 0x35,r24
  70               	.LBE29:
  71               	.LBE28:
 118:main.c        **** 	//struct pixel p;
 119:main.c        **** 	static char cou = 0;
 120:main.c        **** 	uint8_t i;
 121:main.c        **** 	
 122:main.c        **** 	Init_wakeup_timer();
 123:main.c        **** 	sei();
  72               		.loc 1 123 0
  73               	/* #APP */
  74               	 ;  123 "main.c" 1
  75 0012 7894      		sei
  76               	 ;  0 "" 2
 124:main.c        **** 
 125:main.c        **** 	/* loop */
 126:main.c        **** 	while (1) {
 127:main.c        **** 		
 128:main.c        **** 		for (i = 0; i < NR_OF_LEDS; i++) {
 129:main.c        **** 			color_wheel(
  77               		.loc 1 129 0
  78               	/* #NOAPP */
  79 0014 CCE0      		ldi r28,lo8(12)
  80 0016 EC2E      		mov r14,r28
  81 0018 F12C      		mov r15,__zero_reg__
 130:main.c        **** 				(((i * 256) / NR_OF_LEDS) + cou) & 0xff,
 131:main.c        **** 				&pixels[i]);
 132:main.c        **** 			Neo_Pixel_Ring_set(&pixels[i],0,255);
 133:main.c        **** 		}
 134:main.c        **** 		cou++;
 135:main.c        **** 		delay = 5;
  82               		.loc 1 135 0
  83 001a D5E0      		ldi r29,lo8(5)
  84 001c 7D2E      		mov r7,r29
 136:main.c        **** 		//color_wheel(cou++,&pixels[0]);
 137:main.c        **** 		//RGB_fire_run(&pixels[0],&p);
 138:main.c        **** 		ws2812_setleds((struct cRGB *)pixels, NR_OF_LEDS);
 139:main.c        **** 		
 140:main.c        **** 		TCCR0B = (1 << CS02); // timer prescaler == 256
  85               		.loc 1 140 0
  86 001e 14E0      		ldi r17,lo8(4)
  87 0020 412E      		mov r4,r17
  88               	.L8:
  89               	.LVL0:
  90 0022 C090 0000 		lds r12,cou.1666
  91 0026 C0E0      		ldi r28,lo8(pixels)
  92 0028 D0E0      		ldi r29,hi8(pixels)
 117:main.c        **** 	//struct pixel p;
  93               		.loc 1 117 0
  94 002a 00E0      		ldi r16,0
  95 002c 10E0      		ldi r17,0
  96 002e 00C0      		rjmp .L6
  97               	.LVL1:
  98               	.L3:
  99               	.LBB30:
 100               	.LBB31:
  57:main.c        ****         pos -= 85;
 101               		.loc 1 57 0
 102 0030 6A3A      		cpi r22,lo8(-86)
 103 0032 00F4      		brsh .+2
 104 0034 00C0      		rjmp .L17
  63:main.c        ****         color->r  = 0;
 105               		.loc 1 63 0
 106 0036 6A5A      		subi r22,lo8(-(86))
 107               	.LVL2:
  64:main.c        ****         color->g = pos * 3;
 108               		.loc 1 64 0
 109 0038 1982      		std Y+1,__zero_reg__
  65:main.c        ****         color->b = 255 - pos * 3;
 110               		.loc 1 65 0
 111 003a 862F      		mov r24,r22
 112 003c 880F      		lsl r24
 113 003e 860F      		add r24,r22
 114 0040 8883      		st Y,r24
  66:main.c        ****     }
 115               		.loc 1 66 0
 116 0042 862F      		mov r24,r22
 117 0044 880F      		lsl r24
 118 0046 880F      		lsl r24
 119 0048 681B      		sub r22,r24
 120               	.LVL3:
 121 004a 8824      		clr r8
 122 004c 8A94      		dec r8
 123 004e 860E      		add r8,r22
 124 0050 8A82      		std Y+2,r8
 125               	.L13:
 126 0052 912C      		mov r9,__zero_reg__
 127 0054 A12C      		mov r10,__zero_reg__
 128 0056 B12C      		mov r11,__zero_reg__
 129 0058 A501      		movw r20,r10
 130 005a 9401      		movw r18,r8
 131 005c C501      		movw r24,r10
 132 005e B401      		movw r22,r8
 133 0060 00D0      		rcall __mulsi3
 134               	.LVL4:
 135 0062 A501      		movw r20,r10
 136 0064 9401      		movw r18,r8
 137 0066 00D0      		rcall __mulsi3
 138               	.LVL5:
 139 0068 DC01      		movw r26,r24
 140 006a CB01      		movw r24,r22
 141 006c 9058      		subi r25,-128
 142 006e AF4F      		sbci r26,-1
 143 0070 BF4F      		sbci r27,-1
 144 0072 CD01      		movw r24,r26
 145 0074 AA27      		clr r26
 146 0076 BB27      		clr r27
 147 0078 9C01      		movw r18,r24
 148 007a 2295      		swap r18
 149 007c 3295      		swap r19
 150 007e 307F      		andi r19,0xf0
 151 0080 3227      		eor r19,r18
 152 0082 207F      		andi r18,0xf0
 153 0084 3227      		eor r19,r18
 154 0086 A901      		movw r20,r18
 155 0088 481B      		sub r20,r24
 156 008a 590B      		sbc r21,r25
 157 008c CA01      		movw r24,r20
 158 008e 9A01      		movw r18,r20
 159 0090 2295      		swap r18
 160 0092 3295      		swap r19
 161 0094 307F      		andi r19,0xf0
 162 0096 3227      		eor r19,r18
 163 0098 207F      		andi r18,0xf0
 164 009a 3227      		eor r19,r18
 165 009c 820F      		add r24,r18
 166 009e 931F      		adc r25,r19
 167 00a0 D92E      		mov r13,r25
 168               	.L4:
 169               	.LVL6:
 170               	.LBE31:
 171               	.LBE30:
 172               	.LBB33:
 173               	.LBB34:
 174               	.LBB35:
 175               	.LBB36:
  33:main.c        **** 	accu>>=16;
 176               		.loc 1 33 0
 177 00a2 8980      		ldd r8,Y+1
 178 00a4 912C      		mov r9,__zero_reg__
 179 00a6 A12C      		mov r10,__zero_reg__
 180 00a8 B12C      		mov r11,__zero_reg__
 181 00aa A501      		movw r20,r10
 182 00ac 9401      		movw r18,r8
 183 00ae C501      		movw r24,r10
 184 00b0 B401      		movw r22,r8
 185 00b2 00D0      		rcall __mulsi3
 186               	.LVL7:
 187 00b4 A501      		movw r20,r10
 188 00b6 9401      		movw r18,r8
 189 00b8 00D0      		rcall __mulsi3
 190               	.LVL8:
 191 00ba DC01      		movw r26,r24
 192 00bc CB01      		movw r24,r22
 193 00be 9058      		subi r25,-128
 194 00c0 AF4F      		sbci r26,-1
 195 00c2 BF4F      		sbci r27,-1
 196               	.LVL9:
 197               	.LBE36:
 198               	.LBE35:
  44:main.c        **** 		LED->g = ((uint16_t)gamma_corr(LED->g)*brightness)>>8;
 199               		.loc 1 44 0
 200 00c4 CD01      		movw r24,r26
 201 00c6 AA27      		clr r26
 202 00c8 BB27      		clr r27
 203 00ca 9C01      		movw r18,r24
 204 00cc 2295      		swap r18
 205 00ce 3295      		swap r19
 206 00d0 307F      		andi r19,0xf0
 207 00d2 3227      		eor r19,r18
 208 00d4 207F      		andi r18,0xf0
 209 00d6 3227      		eor r19,r18
 210 00d8 A901      		movw r20,r18
 211 00da 481B      		sub r20,r24
 212 00dc 590B      		sbc r21,r25
 213 00de CA01      		movw r24,r20
 214 00e0 9A01      		movw r18,r20
 215 00e2 2295      		swap r18
 216 00e4 3295      		swap r19
 217 00e6 307F      		andi r19,0xf0
 218 00e8 3227      		eor r19,r18
 219 00ea 207F      		andi r18,0xf0
 220 00ec 3227      		eor r19,r18
 221 00ee 820F      		add r24,r18
 222 00f0 931F      		adc r25,r19
 223 00f2 9983      		std Y+1,r25
 224               	.LVL10:
 225               	.LBB37:
 226               	.LBB38:
  33:main.c        **** 	accu>>=16;
 227               		.loc 1 33 0
 228 00f4 8880      		ld r8,Y
 229 00f6 912C      		mov r9,__zero_reg__
 230 00f8 A12C      		mov r10,__zero_reg__
 231 00fa B12C      		mov r11,__zero_reg__
 232 00fc A501      		movw r20,r10
 233 00fe 9401      		movw r18,r8
 234 0100 C501      		movw r24,r10
 235 0102 B401      		movw r22,r8
 236 0104 00D0      		rcall __mulsi3
 237               	.LVL11:
 238 0106 A501      		movw r20,r10
 239 0108 9401      		movw r18,r8
 240 010a 00D0      		rcall __mulsi3
 241               	.LVL12:
 242 010c DC01      		movw r26,r24
 243 010e CB01      		movw r24,r22
 244 0110 9058      		subi r25,-128
 245 0112 AF4F      		sbci r26,-1
 246 0114 BF4F      		sbci r27,-1
 247               	.LVL13:
 248               	.LBE38:
 249               	.LBE37:
  45:main.c        **** 		LED->b = ((uint16_t)gamma_corr(LED->b)*brightness)>>8;
 250               		.loc 1 45 0
 251 0116 CD01      		movw r24,r26
 252 0118 AA27      		clr r26
 253 011a BB27      		clr r27
 254 011c 9C01      		movw r18,r24
 255 011e 2295      		swap r18
 256 0120 3295      		swap r19
 257 0122 307F      		andi r19,0xf0
 258 0124 3227      		eor r19,r18
 259 0126 207F      		andi r18,0xf0
 260 0128 3227      		eor r19,r18
 261 012a A901      		movw r20,r18
 262 012c 481B      		sub r20,r24
 263 012e 590B      		sbc r21,r25
 264 0130 CA01      		movw r24,r20
 265 0132 9A01      		movw r18,r20
 266 0134 2295      		swap r18
 267 0136 3295      		swap r19
 268 0138 307F      		andi r19,0xf0
 269 013a 3227      		eor r19,r18
 270 013c 207F      		andi r18,0xf0
 271 013e 3227      		eor r19,r18
 272 0140 820F      		add r24,r18
 273 0142 931F      		adc r25,r19
 274 0144 9883      		st Y,r25
  46:main.c        **** 	}
 275               		.loc 1 46 0
 276 0146 DA82      		std Y+2,r13
 277               	.LVL14:
 278 0148 1395      		inc r17
 279 014a 2396      		adiw r28,3
 280               	.LBE34:
 281               	.LBE33:
 128:main.c        **** 			color_wheel(
 282               		.loc 1 128 0
 283 014c 0115      		cp r16,__zero_reg__
 284 014e 5CE0      		ldi r21,12
 285 0150 1507      		cpc r17,r21
 286 0152 01F0      		breq .L18
 287               	.L6:
 129:main.c        **** 				(((i * 256) / NR_OF_LEDS) + cou) & 0xff,
 288               		.loc 1 129 0 discriminator 3
 289 0154 C801      		movw r24,r16
 290 0156 B701      		movw r22,r14
 291 0158 00D0      		rcall __divmodhi4
 292 015a 6C0D      		add r22,r12
 293               	.LVL15:
 294               	.LBB39:
 295               	.LBB32:
  53:main.c        ****     	color->r = pos * 3;
 296               		.loc 1 53 0 discriminator 3
 297 015c 6535      		cpi r22,lo8(85)
 298 015e 00F0      		brlo .+2
 299 0160 00C0      		rjmp .L3
  54:main.c        ****     	color->g = 255 - pos * 3;
 300               		.loc 1 54 0
 301 0162 862F      		mov r24,r22
 302 0164 880F      		lsl r24
 303 0166 860F      		add r24,r22
 304 0168 8983      		std Y+1,r24
  55:main.c        ****     	color->b = 0;
 305               		.loc 1 55 0
 306 016a 862F      		mov r24,r22
 307 016c 880F      		lsl r24
 308 016e 880F      		lsl r24
 309 0170 681B      		sub r22,r24
 310               	.LVL16:
 311 0172 6150      		subi r22,lo8(-(-1))
 312 0174 6883      		st Y,r22
  56:main.c        ****     } else if (pos < 170) {
 313               		.loc 1 56 0
 314 0176 1A82      		std Y+2,__zero_reg__
 315 0178 D12C      		mov r13,__zero_reg__
 316 017a 00C0      		rjmp .L4
 317               	.LVL17:
 318               	.L17:
  58:main.c        ****         color->r = 255 - pos * 3;
 319               		.loc 1 58 0
 320 017c 6555      		subi r22,lo8(-(-85))
 321               	.LVL18:
  59:main.c        ****         color->g = 0;
 322               		.loc 1 59 0
 323 017e 862F      		mov r24,r22
 324 0180 880F      		lsl r24
 325 0182 880F      		lsl r24
 326 0184 462F      		mov r20,r22
 327 0186 481B      		sub r20,r24
 328 0188 842F      		mov r24,r20
 329 018a 8150      		subi r24,lo8(-(-1))
 330 018c 8983      		std Y+1,r24
  60:main.c        ****         color->b = pos * 3;
 331               		.loc 1 60 0
 332 018e 1882      		st Y,__zero_reg__
  61:main.c        ****     } else {
 333               		.loc 1 61 0
 334 0190 862E      		mov r8,r22
 335 0192 880C      		lsl r8
 336 0194 680D      		add r22,r8
 337               	.LVL19:
 338 0196 6A83      		std Y+2,r22
 339 0198 862E      		mov r8,r22
 340 019a 00C0      		rjmp .L13
 341               	.L18:
 342               	.LBE32:
 343               	.LBE39:
 134:main.c        **** 		delay = 5;
 344               		.loc 1 134 0
 345 019c C394      		inc r12
 346 019e C092 0000 		sts cou.1666,r12
 135:main.c        **** 		//color_wheel(cou++,&pixels[0]);
 347               		.loc 1 135 0
 348 01a2 7092 0000 		sts delay,r7
 138:main.c        **** 		
 349               		.loc 1 138 0
 350 01a6 6CE0      		ldi r22,lo8(12)
 351 01a8 70E0      		ldi r23,0
 352 01aa 80E0      		ldi r24,lo8(pixels)
 353 01ac 90E0      		ldi r25,hi8(pixels)
 354 01ae 00D0      		rcall ws2812_setleds
 355               	.LVL20:
 356               		.loc 1 140 0
 357 01b0 43BE      		out 0x33,r4
 358 01b2 00C0      		rjmp .L15
 359               	.L10:
 141:main.c        **** 		while(delay--){
 142:main.c        **** 			sleep_mode();// sleep until timer interrupt is triggered
 360               		.loc 1 142 0
 361 01b4 85B7      		in r24,0x35
 362 01b6 8062      		ori r24,lo8(32)
 363 01b8 85BF      		out 0x35,r24
 364               	/* #APP */
 365               	 ;  142 "main.c" 1
 366 01ba 8895      		sleep
 367               		
 368               	 ;  0 "" 2
 369               	/* #NOAPP */
 370 01bc 85B7      		in r24,0x35
 371 01be 8F7D      		andi r24,lo8(-33)
 372 01c0 85BF      		out 0x35,r24
 373               	.L15:
 141:main.c        **** 		while(delay--){
 374               		.loc 1 141 0
 375 01c2 8091 0000 		lds r24,delay
 376 01c6 9FEF      		ldi r25,lo8(-1)
 377 01c8 980F      		add r25,r24
 378 01ca 9093 0000 		sts delay,r25
 379 01ce 8111      		cpse r24,__zero_reg__
 380 01d0 00C0      		rjmp .L10
 143:main.c        **** 		}
 144:main.c        **** 		TCCR0B &= ~(1<<CS02); //Stop Timer0
 381               		.loc 1 144 0
 382 01d2 83B7      		in r24,0x33
 383 01d4 8B7F      		andi r24,lo8(-5)
 384 01d6 83BF      		out 0x33,r24
 145:main.c        **** 		TCNT0 = 0;
 385               		.loc 1 145 0
 386 01d8 12BE      		out 0x32,__zero_reg__
 146:main.c        **** 	}
 387               		.loc 1 146 0
 388 01da 00C0      		rjmp .L8
 389               		.cfi_endproc
 390               	.LFE7:
 392               		.local	cou.1666
 393               		.comm	cou.1666,1,1
 394               		.comm	pixels,36,1
 395               	.global	delay
 396               		.data
 399               	delay:
 400 0000 05        		.byte	5
 401               		.text
 402               	.Letext0:
 403               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 404               		.file 3 "light_ws2812.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\PM\AppData\Local\Temp\ccxSK6ez.s:2      *ABS*:0000003d __SP_L__
C:\Users\PM\AppData\Local\Temp\ccxSK6ez.s:3      *ABS*:0000003f __SREG__
C:\Users\PM\AppData\Local\Temp\ccxSK6ez.s:4      *ABS*:00000000 __tmp_reg__
C:\Users\PM\AppData\Local\Temp\ccxSK6ez.s:5      *ABS*:00000001 __zero_reg__
C:\Users\PM\AppData\Local\Temp\ccxSK6ez.s:11     .text:00000000 __vector_6
C:\Users\PM\AppData\Local\Temp\ccxSK6ez.s:47     .text.startup:00000000 main
                             .bss:00000000 cou.1666
                            *COM*:00000024 pixels
C:\Users\PM\AppData\Local\Temp\ccxSK6ez.s:399    .data:00000000 delay

UNDEFINED SYMBOLS
__mulsi3
__divmodhi4
ws2812_setleds
__do_copy_data
__do_clear_bss
